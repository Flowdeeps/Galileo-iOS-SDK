<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/GCGalileo.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/GCGalileo</TokenIdentifier>
			<Abstract type="html">The Galileo class provides a singleton instance representing the currently attached Galileo device.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/GCGalileo/sharedGalileo</TokenIdentifier>
			<Abstract type="html">Returns the singleton Galileo instance.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>+ (GCGalileo *)sharedGalileo</Declaration>
			
			
			<Anchor>//api/name/sharedGalileo</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate of the Galileo object.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) id&lt;GCGalileoDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/delegate</TokenIdentifier>
			<Abstract type="html">The delegate of the Galileo object.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) id&lt;GCGalileoDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/delegate</TokenIdentifier>
			<Abstract type="html">The delegate of the Galileo object.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) id&lt;GCGalileoDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/waitForConnection</TokenIdentifier>
			<Abstract type="html">Wait until a Galileo accessory is connected.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (void)waitForConnection</Declaration>
			
			
			<Anchor>//api/name/waitForConnection</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/isConnected</TokenIdentifier>
			<Abstract type="html">Check if a Galileo accessory is connected and ready to recieve commands.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (BOOL)isConnected</Declaration>
			
			
			<Anchor>//api/name/isConnected</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/disconnect</TokenIdentifier>
			<Abstract type="html">Disconnect a connected Galileo accessory.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (void)disconnect</Declaration>
			
			
			<Anchor>//api/name/disconnect</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setModelType:</TokenIdentifier>
			<Abstract type="html">The model type of the connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *modelType</Declaration>
			
			
			<Anchor>//api/name/modelType</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/modelType</TokenIdentifier>
			<Abstract type="html">The model type of the connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *modelType</Declaration>
			
			
			<Anchor>//api/name/modelType</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/modelType</TokenIdentifier>
			<Abstract type="html">The model type of the connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *modelType</Declaration>
			
			
			<Anchor>//api/name/modelType</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setShouldAutoConnectToKnownGalileo:</TokenIdentifier>
			<Abstract type="html">True if Galileo will attempt to auto-connect (without user action) to previously known Galileo devices.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAutoConnectToKnownGalileo</Declaration>
			
			
			<Anchor>//api/name/shouldAutoConnectToKnownGalileo</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/shouldAutoConnectToKnownGalileo</TokenIdentifier>
			<Abstract type="html">True if Galileo will attempt to auto-connect (without user action) to previously known Galileo devices.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAutoConnectToKnownGalileo</Declaration>
			
			
			<Anchor>//api/name/shouldAutoConnectToKnownGalileo</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/shouldAutoConnectToKnownGalileo</TokenIdentifier>
			<Abstract type="html">True if Galileo will attempt to auto-connect (without user action) to previously known Galileo devices.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAutoConnectToKnownGalileo</Declaration>
			
			
			<Anchor>//api/name/shouldAutoConnectToKnownGalileo</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setCanRunInBackground:</TokenIdentifier>
			<Abstract type="html">True if Galileo can remain connected whilst the app is in the background.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL canRunInBackground</Declaration>
			
			
			<Anchor>//api/name/canRunInBackground</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/canRunInBackground</TokenIdentifier>
			<Abstract type="html">True if Galileo can remain connected whilst the app is in the background.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL canRunInBackground</Declaration>
			
			
			<Anchor>//api/name/canRunInBackground</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/canRunInBackground</TokenIdentifier>
			<Abstract type="html">True if Galileo can remain connected whilst the app is in the background.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL canRunInBackground</Declaration>
			
			
			<Anchor>//api/name/canRunInBackground</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setModelName:</TokenIdentifier>
			<Abstract type="html">The name of the connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, retain) NSString *modelName</Declaration>
			
			
			<Anchor>//api/name/modelName</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/modelName</TokenIdentifier>
			<Abstract type="html">The name of the connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, retain) NSString *modelName</Declaration>
			
			
			<Anchor>//api/name/modelName</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/modelName</TokenIdentifier>
			<Abstract type="html">The name of the connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, retain) NSString *modelName</Declaration>
			
			
			<Anchor>//api/name/modelName</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setBatteryLevelPercent:</TokenIdentifier>
			<Abstract type="html">Remaining battery charge as a percentage of total.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) unsigned int batteryLevelPercent</Declaration>
			
			
			<Anchor>//api/name/batteryLevelPercent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/batteryLevelPercent</TokenIdentifier>
			<Abstract type="html">Remaining battery charge as a percentage of total.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) unsigned int batteryLevelPercent</Declaration>
			
			
			<Anchor>//api/name/batteryLevelPercent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/batteryLevelPercent</TokenIdentifier>
			<Abstract type="html">Remaining battery charge as a percentage of total.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) unsigned int batteryLevelPercent</Declaration>
			
			
			<Anchor>//api/name/batteryLevelPercent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setConnectedToPowerSource:</TokenIdentifier>
			<Abstract type="html">True if Galileo is connected to a power source.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isConnectedToPowerSource) BOOL connectedToPowerSource</Declaration>
			
			
			<Anchor>//api/name/connectedToPowerSource</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/isConnectedToPowerSource</TokenIdentifier>
			<Abstract type="html">True if Galileo is connected to a power source.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isConnectedToPowerSource) BOOL connectedToPowerSource</Declaration>
			
			
			<Anchor>//api/name/connectedToPowerSource</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/connectedToPowerSource</TokenIdentifier>
			<Abstract type="html">True if Galileo is connected to a power source.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isConnectedToPowerSource) BOOL connectedToPowerSource</Declaration>
			
			
			<Anchor>//api/name/connectedToPowerSource</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setHardwareVersion:</TokenIdentifier>
			<Abstract type="html">Hardware version for the currently connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) GCHardwareVersion hardwareVersion</Declaration>
			
			
			<Anchor>//api/name/hardwareVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/hardwareVersion</TokenIdentifier>
			<Abstract type="html">Hardware version for the currently connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) GCHardwareVersion hardwareVersion</Declaration>
			
			
			<Anchor>//api/name/hardwareVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/hardwareVersion</TokenIdentifier>
			<Abstract type="html">Hardware version for the currently connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) GCHardwareVersion hardwareVersion</Declaration>
			
			
			<Anchor>//api/name/hardwareVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setFirmwareVersion:</TokenIdentifier>
			<Abstract type="html">Firmware version for the currently connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) unsigned int firmwareVersion</Declaration>
			
			
			<Anchor>//api/name/firmwareVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/firmwareVersion</TokenIdentifier>
			<Abstract type="html">Firmware version for the currently connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) unsigned int firmwareVersion</Declaration>
			
			
			<Anchor>//api/name/firmwareVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/firmwareVersion</TokenIdentifier>
			<Abstract type="html">Firmware version for the currently connected Galileo.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) unsigned int firmwareVersion</Declaration>
			
			
			<Anchor>//api/name/firmwareVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/selectMode:forAxis:</TokenIdentifier>
			<Abstract type="html">Attempt to switch Galileo into a specified mode.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (BOOL)selectMode:(GCMode)newMode forAxis:(GCControlAxis)axis</Declaration>
			<Parameters>
				<Parameter>
					<Name>newMode</Name>
					<Abstract type="html">Desired mode you wish to switch to.</Abstract>
				</Parameter><Parameter>
					<Name>axis</Name>
					<Abstract type="html">Axis you wish to change modes on.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns True if mode selection was succesful.</Abstract></ReturnValue>
			<Anchor>//api/name/selectMode:forAxis:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/modeForAxis:</TokenIdentifier>
			<Abstract type="html">Get the current mode for a given axis.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (GCMode)modeForAxis:(GCControlAxis)axis</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Axis you wish to obtain the modes for.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns the current mode.</Abstract></ReturnValue>
			<Anchor>//api/name/modeForAxis:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/velocityControlForAxis:</TokenIdentifier>
			<Abstract type="html">Control Galileo&apos;s velocity for a specified axis.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (GCVelocityControl *)velocityControlForAxis:(GCControlAxis)axis</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Axis you wish to control velocity for.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns a GCVelocityControl object for controlling Galileo&apos;s velocity.</Abstract></ReturnValue>
			<Anchor>//api/name/velocityControlForAxis:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/positionControlForAxis:</TokenIdentifier>
			<Abstract type="html">Control Galileo&apos;s position for a specified axis.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>- (GCPositionControl *)positionControlForAxis:(GCControlAxis)axis</Declaration>
			<Parameters>
				<Parameter>
					<Name>axis</Name>
					<Abstract type="html">Axis you wish to control position for.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns a GCPositionControl object for controlling Galileo&apos;s position.</Abstract></ReturnValue>
			<Anchor>//api/name/positionControlForAxis:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setIsMotrrAppInstalled:</TokenIdentifier>
			<Abstract type="html">Check if the device has the Motrr app installed.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isMotrrAppInstalled</Declaration>
			
			
			<Anchor>//api/name/isMotrrAppInstalled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/isMotrrAppInstalled</TokenIdentifier>
			<Abstract type="html">Check if the device has the Motrr app installed.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isMotrrAppInstalled</Declaration>
			
			
			<Anchor>//api/name/isMotrrAppInstalled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/isMotrrAppInstalled</TokenIdentifier>
			<Abstract type="html">Check if the device has the Motrr app installed.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isMotrrAppInstalled</Declaration>
			
			
			<Anchor>//api/name/isMotrrAppInstalled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setFirmwareManager:</TokenIdentifier>
			<Abstract type="html">Manage Galileo&apos;s firmware.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) GCFirmwareManager *firmwareManager</Declaration>
			
			
			<Anchor>//api/name/firmwareManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/firmwareManager</TokenIdentifier>
			<Abstract type="html">Manage Galileo&apos;s firmware.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) GCFirmwareManager *firmwareManager</Declaration>
			
			
			<Anchor>//api/name/firmwareManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/firmwareManager</TokenIdentifier>
			<Abstract type="html">Manage Galileo&apos;s firmware.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) GCFirmwareManager *firmwareManager</Declaration>
			
			
			<Anchor>//api/name/firmwareManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setLogLevel:</TokenIdentifier>
			<Abstract type="html">Set the required level of logging detail.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) GCLogLevel logLevel</Declaration>
			
			
			<Anchor>//api/name/logLevel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/logLevel</TokenIdentifier>
			<Abstract type="html">Set the required level of logging detail.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) GCLogLevel logLevel</Declaration>
			
			
			<Anchor>//api/name/logLevel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/logLevel</TokenIdentifier>
			<Abstract type="html">Set the required level of logging detail.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) GCLogLevel logLevel</Declaration>
			
			
			<Anchor>//api/name/logLevel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/setOverrideLoggingFunction:</TokenIdentifier>
			<Abstract type="html">Override the default logging function with your own.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( GCLogLevel logLevel , const char *functionName , unsigned int lineNumber , NSString *format , va_list args ) overrideLoggingFunction</Declaration>
			
			
			<Anchor>//api/name/overrideLoggingFunction</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GCGalileo/overrideLoggingFunction</TokenIdentifier>
			<Abstract type="html">Override the default logging function with your own.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( GCLogLevel logLevel , const char *functionName , unsigned int lineNumber , NSString *format , va_list args ) overrideLoggingFunction</Declaration>
			
			
			<Anchor>//api/name/overrideLoggingFunction</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GCGalileo/overrideLoggingFunction</TokenIdentifier>
			<Abstract type="html">Override the default logging function with your own.</Abstract>
			<DeclaredIn>GCGalileo.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( GCLogLevel logLevel , const char *functionName , unsigned int lineNumber , NSString *format , va_list args ) overrideLoggingFunction</Declaration>
			
			
			<Anchor>//api/name/overrideLoggingFunction</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
        
	</File>
</Tokens>